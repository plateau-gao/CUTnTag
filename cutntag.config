params {
/*
=====================================================================================
 Set threads
=====================================================================================
*/
    threads = 4

/*
=====================================================================================
Set Input & Output files

 1. input.csv must and only contain this column: group,cond,SampleId,read1,read2
    1.1 the second column is "condition", which only have two choice: "ctrl" or "exp"
    1.2 the third, forth and fifth column: divide the file name by "_" into two parts: one will be sampleID, another will be read1 or read2
        1.2.1 example1: SRR123456_1.fastq: sampleID: SRR123456, read1: 1.fastq
        1.2.2 example2: SRR123456_val_1.fastq: sampleID: SRR123456, read1: val_1.fastq

2. for use_ctrl: whether you have control group or not

3. data = directory where you storage experiment data, like fastq.gz file
    3.1 example: 
        experiment data: ~/test-data/A_{1,2}.fastq.
        If $projectDir = ~, then: data = "$projectDir/test-data"

4. for ref_hg38 and ref_ecoli: 
    if you have built the index, please enter the file direcory
    example: "$projectDir/ref/ecoli/*.bt2"

5. genome_size = hg38.chrom.sizes, be used to generate bedgraph file
=====================================================================================
*/
    input = "$projectDir/input.csv"
    use_ctrl = true
    data = "$projectDir/test-data" // this is the directory 

    
    ref_hg38 = "$projectDir/ref-hg38/hg38*" 
    ref_ecoli = "$projectDir/ref-ecoli/ecoli*"

    genome_size = "$projectDir/support-data/hg38.chrom.sizes"
    gene_for_heatmap = "$projectDir/support-data/hg38.gtf" 
    //seacr_sh = "/usr/local/bin/SEACR_1.3.sh" // in singularity image
    seacr_sh = "/mnt/cbis/home/gaoyuan/miniconda3/bin/SEACR_1.3.sh" //on my atlas

    result = "$projectDir/result"

/*
=====================================================================================
 Setting Workflow
 
 1. if you want to skip some steps, tap in false, example: "fastqc = false"

 2. peak calling: for peak calling, seacr is recommanded

 3. heatmap: drawing heatmap will use bw file.
    1. if heatmap_on_trans = true, then bam2bigwig = true (must)
    2. bam2bigwig could be true even "heatmap = false"
=====================================================================================
*/
    workflow {
        fastqc = false
        trim = false
        bowtie2_build_ecoli = false
        bowtie2_build_hg38 = false
        picard_rmDup = false
        map_quality_filter = false
        seacr = true
        macs2 = true
        bam2bigwig = true
        heatmap_on_trans = false
        heatmap_on_peak = true
    }

/*
=====================================================================================
 Set Arguments
=====================================================================================
*/
    args{
    //----------------------------- trim-galore ------------------------------//
        trim_galore= "-q 20 --phred33 --stringency 3 --length 30 --gzip"
    
    //----------------------------- alignment --------------------------------//
        bowtie2_align_target = "--end-to-end --very-sensitive --no-mixed --no-discordant --phred33 -I 10 -X 700"
        bowtie2_align_spikein = "--end-to-end --very-sensitive --no-overlap --no-dovetail --no-mixed --no-discordant --phred33 -I 10 -X 700"
        samtool_seqDepth_view = "-F 0x04"

    //----------------------------- picard -----------------------------------//
        picard_sort = "--SORT_ORDER coordinate"

    //-------------- assess mapped fragment size distribution ----------------//
        samtool_assess_frag = "-F 0x04"
        assess_frag = "awk -F'\\t' 'function abs(x){return ((x < 0.0) ? -x : x)} {print abs(\$9)}' | sort | uniq -c | awk -v OFS=\"\\t\" '{print \$2, \$1/2}'"

    //---------- filter mapped reads by the mapping quality filtering --------//
        filter_miniQualityScore = 0

    //---------------------- file format conversion --------------------------//
        samtool_sam2bam_view = "-bS -F 0x04"
        bedtool_bam2bed = "-bedpe"
        clean_bed = "'\$1==\$4 && \$6-\$2 < 1000 {print \$0}'"
        frag_bed_cut = "-f 1,2,6"
        frag_bed_sort = "-k1,1 -k2,2n -k3,3n"

    //------------------- assess replicate reproducibility -------------------//
        binLen = 500
        awk_binLen = "-v w=${params.args.binLen} '{print \$1, int((\$2 + \$3)/(2*w))*w + w/2}'"
        assess_reproducibility = "sort -k1,1V -k2,2n | uniq -c | awk -v OFS=\"\\t\" '{print \$2, \$3, \$1}' |  sort -k1,1V -k2,2n"

    //---- scale_factor = constant C / (fragments mapped to Ecoli genome) ----//
        constant_C = 10000


    //---------------------- peak calling by seacr ---------------------------//
        seacr_norm_mode = "non stringent"
        seacr_top = "0.01"
        seacr_threshold_noconrl = "0.1"

    //---------------------- peak calling by macs2 ---------------------------//
        macs2_base_qvalue = "0.1"
        macs2_top_qvalue = "0.01"
        macs2_args = "-g hs -f BAMPE --keep-dup all"
        
    //---------------------- visualization: heatmap --------------------------//
        matrix_transcription = "--beforeRegionStartLength 3000 --regionBodyLength 5000  --afterRegionStartLength 3000 --skipZeros"
        plot_transcription = "--sortUsing sum"
        seacr_summit_awk = "'{split(\$6, summit, \":\"); split(summit[2], region, \"-\"); print summit[1]\"\\t\"region[1]\"\\t\"region[2]}'"
        matrix_peak = "--skipZeros -a 3000 -b 3000 --referencePoint center --missingDataAsZero"
        plot_peak = "--sortUsing sum --startLabel \"Peak Start\" --endLabel \"Peak End\" --xAxisLabel \"\" --regionsLabel \"Peaks\""
    }
}

report {
    enabled = true
    overwrite = true
}

timeline {
    enabled = true
    overwrite = true
}

dag {
    enabled = true
    file = "cutntag.dot"
}

trace {
    enabled = true
    fields = 'hash,name,duration,%cpu,rss'
    overwrite = true
}
